{"mode":"Text","textContent":"#pragma region VEXcode Generated Robot Configuration\n// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START IQ MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END IQ MACROS\n\n\n// Robot configuration code.\ninertial BrainInertial = inertial();\nmotor LeftDriveSmart = motor(PORT3, 1, false);\nmotor RightDriveSmart = motor(PORT4, 1, true);\ngyro DrivetrainGyro = gyro(PORT10, true);\nsmartdrive Drivetrain = smartdrive(LeftDriveSmart, RightDriveSmart, DrivetrainGyro, 200);\n\nmotor Bluearm = motor(PORT8, true);\nmotor Intake = motor(PORT1, true);\nmotor Flywheel = motor(PORT7, false);\ntouchled TouchLED = touchled(PORT12);\ntouchled TouchLED2 = touchled(PORT11);\nmotor Flicker = motor(PORT9, true);\n\nvoid calibrateDrivetrain() {\n  wait(200, msec);\n  Brain.Screen.print(\"Calibrating\");\n  Brain.Screen.newLine();\n  Brain.Screen.print(\"Gyro\");\n  DrivetrainGyro.calibrate(calNormal);\n  while (DrivetrainGyro.isCalibrating()) {\n    wait(25, msec);\n  }\n\n  // Clears the screen and returns the cursor to row 1, column 1.\n  Brain.Screen.clearScreen();\n  Brain.Screen.setCursor(1, 1);\n}\n#pragma endregion VEXcode Generated Robot Configuration\n\n// Include the IQ Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\nfloat myVariable;\n\n// \"when started\" hat block\nvoid whenStarted1() {\n  Drivetrain.driveFor(reverse, 20.0, mm);\n  Drivetrain.turnToRotation(44.0, degrees);\n  Drivetrain.driveFor(reverse, 65.0, mm);\n  Drivetrain.turnToRotation(55.0, degrees);\n  Bluearm.spinToPosition(285.0, degrees);\n  wait(0.25, seconds);\n  Bluearm.spinToPosition(0.0, degrees);\n  Drivetrain.turnToHeading(90.0, degrees);\n  Drivetrain.driveFor(forward, 200.0, mm);\n  Drivetrain.turnToHeading(-102.0, degrees);\n  Drivetrain.driveFor(reverse, 200.0, mm);\n  Bluearm.spinToPosition(300.0, degrees);\n  wait(0.25, seconds);\n  Bluearm.spinToPosition(0.0, degrees);\n  Intake.setVelocity(100.0, percent);\n  Flywheel.setVelocity(40.0, percent);\n  //Flywheel.spin(reverse);\n  //Intake.spin(forward);\n  Drivetrain.turnToHeading(180.0, degrees);\n  Drivetrain.setHeading(0.0, degrees);\n  Drivetrain.turnToHeading(-5.0, degrees);\n  Drivetrain.setHeading(0.0, degrees);\n  Drivetrain.driveFor(forward, 200.0, mm);\n  Drivetrain.turnToHeading(-20.0, degrees);\n  Drivetrain.driveFor(forward, 750.0, mm);\n  Drivetrain.turnToHeading(-90.0, degrees);\n  Drivetrain.driveFor(reverse, 350.0, mm);\n  Bluearm.spinToPosition(90.0, degrees);\n  Drivetrain.setTurnVelocity(100.0, percent);\n  Drivetrain.turnToHeading(-60.0, degrees);\n  Drivetrain.driveFor(forward,100,mm);\n  //New Stuff\n  wait(1,seconds);\n  Drivetrain.turnToHeading(-90,degrees);\n  Drivetrain.driveFor(forward, 50,mm);\n  \n\n\n\n  //return 0;\n}\n\nvoid PickupDisks() {\n Flywheel.spin(reverse);\n Intake.setMaxTorque(100,percent);\n Intake.setVelocity(100,percent);\n Intake.spin(forward);\n Drivetrain.driveFor(reverse, 100, mm);\n //Drivetrain.turnToHeading(-180,degrees);\n \n Drivetrain.turnToHeading(-160,degrees);\n Drivetrain.driveFor(forward, 290, mm);\n Drivetrain.driveFor(forward, 500,mm);\n Drivetrain.turnToHeading(0,degrees);\n Flywheel.setVelocity(100,percent);\n Flywheel.spin(forward);\n wait(5,seconds);\n Flicker.setVelocity(100,percent);\n \n Flicker.spin(forward);\n \n \n\n}\nint main() {\n  // Calibrate the Drivetrain Gyro\n  calibrateDrivetrain();\n\n  TouchLED.pressed(whenStarted1);\n  TouchLED2.pressed(PickupDisks);\n\n  \n}","textLanguage":"cpp","rconfig":[{"port":[3,4,10],"name":"Drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"2-motor","wheelSize":"200mm","gearRatio":"1:1","direction":"fwd","gyroType":"smart","width":"173","unit":"mm","wheelbase":"76","wheelbaseUnit":"mm","xOffset":"0","yOffset":"0","thetaOffset":"0"},"triportSourcePort":22},{"port":[8],"name":"Bluearm","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse"},"triportSourcePort":22},{"port":[1],"name":"Intake","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse"},"triportSourcePort":22},{"port":[7],"name":"Flywheel","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse"},"triportSourcePort":22},{"port":[12],"name":"TouchLED","customName":true,"deviceType":"TouchLED","deviceClass":"touchled","setting":{},"triportSourcePort":22},{"port":[11],"name":"TouchLED2","customName":true,"deviceType":"TouchLED","deviceClass":"touchled","setting":{},"triportSourcePort":22},{"port":[9],"name":"Flicker","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse"},"triportSourcePort":22}],"slot":2,"platform":"IQ","sdkVersion":"20220726.10.00.00","appVersion":"2.4.4","minVersion":"2.4.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"Second","target":"Physical"}